@inherits ComponentBase

    <BSCard Class="card-linked-account">
        @if (Profile != null) {
            <BSRow NoGutters="true">
                <BSCol XS="2"><img src="@Profile.avatarUrl" /></BSCol>
                <BSCol XS="8">
                    <h5>@Service.ToString("G")</h5>
                    <p>@Profile.username</p>
                </BSCol>
                <BSCol XS="2"><img src="@ServiceIcon" /></BSCol>
            </BSRow>
            <hr />
            <BSRow NoGutters="true">
                <BSButtonGroup Size="Size.Small">
                    @if (Profile.isPrimary) {
                    <div class="icon-with-text text-success">
                        <span class="oi oi-circle-check" aria-hidden="true"></span>
                        <span>Primary Profile</span>
                    </div>
                    } else {
                        <BSButton Color="Color.Info" IsDisabled="true">Make Primary</BSButton>
                        <BSButton Color="Color.Danger" IsDisabled="true">Unlink</BSButton>
                    }
                </BSButtonGroup>
            </BSRow>
        } else {
            <BSRow NoGutters="true">
                <BSCol XS="2"><img src="https://image.flaticon.com/icons/png/512/36/36601.png" /></BSCol>
                <BSCol XS="8">
                    <h5>@Service.ToString("G")</h5>
                    <p>Not Linked</p>
                </BSCol>
                <BSCol XS="2"><img src="@ServiceIcon" /></BSCol>
            </BSRow>
            <hr />
            <BSRow NoGutters="true">
                <BSButtonGroup Size="Size.Small">
                    <a href="@AccountEndpoints.GetLoginEndpoint(Service)">
                        <BSButton Size="Size.Small" Color="Color.Info">Link Account</BSButton>
                    </a>
                </BSButtonGroup>
            </BSRow>
        }
    </BSCard>

@code {
    [Parameter]
    public LinkedService Service { get; set; }

    [Parameter]
    public ILinkedProfile Profile { get; set; }

    private string ServiceIcon { get; set; }

    protected override Task OnInitializedAsync() {
        switch (Service) {
            case LinkedService.GitHub:
                ServiceIcon = "https://image.flaticon.com/icons/svg/25/25231.svg";
                break;
            case LinkedService.GitLab:
                ServiceIcon = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/GitLab_Logo.svg/1200px-GitLab_Logo.svg.png";
                break;
            default:
                ServiceIcon = "https://image.flaticon.com/icons/png/512/36/36601.png";
                break;
        }
        return base.OnInitializedAsync();
    }
}